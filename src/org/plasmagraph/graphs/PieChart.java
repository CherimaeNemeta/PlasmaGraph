package org.plasmagraph.graphs;

import java.awt.Font;
import javax.swing.JFrame;
import javax.swing.JPanel;

import org.jfree.chart.*;
import org.jfree.chart.plot.*;
import org.jfree.data.general.*;
import org.plasmagraph.template.Template;

public class PieChart extends JFrame{

    
        /**
	 * "Unique" ID generated by Eclipse.
	 * How unique it may be is questionable, but it should work well enough.
	 */
         // Let Eclipse do it.
         // static JFreeChart chart;
	// Constructors
	public PieChart (Template t) {
		super(t.chart_name);
		setContentPane (createJPanel (t));
	}
	
	public static JPanel createJPanel (Template t) {
		JFreeChart chart = createChart (createDataset(t), t);
		return (new ChartPanel (chart, true, true, true, true, true));
	}
	
	private static PieDataset createDataset (Template t) {
		DefaultPieDataset set = new DefaultPieDataset ();
                generateTestDataset (set, t);
		
		return (set);
	}
	
	private static void generateTestDataset(DefaultPieDataset set, Template t) {
		set.setValue ("http", new Double (53.2));
		set.setValue ("ftp", new Double (10.0));
		set.setValue ("ssh", new Double (27.5));
		set.setValue ("https", new Double (7.5));
		set.setValue ("telnet", new Double (11.0));
		set.setValue ("rlogin", new Double (19.4));
	}
	
	private static JFreeChart createChart (PieDataset set, Template t) {
		JFreeChart chart = ChartFactory.createPieChart
                        (t.chart_name, set, t.using_legend, t.using_tooltips, t.generate_urls);
		PiePlot plot = (PiePlot) chart.getPlot();
		
		plot.setSectionOutlinesVisible(true);
		plot.setLabelFont(new Font ("SansSerif", Font.PLAIN, 12));
		plot.setCircular(false);
		
		return (chart);
	}
}
