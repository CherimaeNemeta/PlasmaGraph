package org.plasmagraph.graphs;

// Swing / AWT
import java.awt.Font;
import javax.swing.JFrame;
import javax.swing.JPanel;

// JFreeChart
import org.jfree.chart.*;
import org.jfree.data.xy.DefaultXYDataset;
// http://www.jfree.org/jfreechart/api/javadoc/org/jfree/data/xy/DefaultXYDataset.html
import org.jfree.data.xy.XYDataset;

// PlasmaGraph
import org.plasmagraph.template.Template;

public class LineChart extends JFrame{

	/**
	 * "Unique" ID generated by Eclipse.
	 * How unique it may be is questionable, but it should work well enough.
	 */
        // Let Eclipse do it.
	static JFreeChart chart;

	// Constructors
	public LineChart (Template t) {
		super(t.chart_name);
		setContentPane (createJPanel (t));
	}
	
	public static JPanel createJPanel (Template t) {
		chart = createChart (createDataset(t), t);
		return (new ChartPanel (chart, true, true, true, true, true));
	}
	
	private static XYDataset createDataset (Template t) {
		DefaultXYDataset set = new DefaultXYDataset ();
		generateTestDataset (set, t);
		
		return (set);
	}
	
	private static void generateTestDataset(DefaultXYDataset set, Template t) {
		double[][] data = new double [2][6];
		for (int i = 0; i < 6; ++i) {
			for (int j = 0; j < 2; ++j) {
				data[j][i] = i + 1;
			}
		}
		set.addSeries(t.x_axis_name, data);
	}

	private static JFreeChart createChart (XYDataset set, Template t) {
		JFreeChart chart = ChartFactory.createScatterPlot(t.chart_name, t.y_axis_name, t.x_axis_name, 
				set, t.orientation, t.using_legend, t.using_tooltips, t.generate_urls);
		
		//org.jfree.chart.plot.LineChart plot = chart.getLineChart();
		
		return (chart);
	}
}
